/*
 * mytube-dl - WebUI for youtube-dl
 * Copyright (C) 2017 Max Dor
 *
 * https://max.dorius.io/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import java.util.regex.Pattern

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

String appVersion() {
    def versionPattern = Pattern.compile("v(\\d+\\.)?(\\d+\\.)?(\\d+)(-.*)?")

    String version = System.getenv('MYTUBEDL_BUILD_VERSION')
    if (version == null || version.size() == 0) {
        version = gitVersion()
    }
    return versionPattern.matcher(version).matches() ? version.substring(1) : version
}

String gitVersion() {
    ByteArrayOutputStream out = new ByteArrayOutputStream()
    exec {
        commandLine = ['git', 'describe', '--always', '--dirty']
        standardOutput = out
    }
    return out.toString().replace(System.lineSeparator(), '')
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'

mainClassName = 'io.dorius.max.mytubedl.HttpApp'

def dockerImageName = propValue('docker.image.name', 'maximusdor/mytube-dl')
def dockerImageTag = propValue('docker.image.tag', appVersion())
def dockerImage = dockerImageName + ':' + dockerImageTag

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Logging
    compile 'org.slf4j:slf4j-simple:1.7.25'

    // Basic utils
    compile 'org.apache.commons:commons-lang3:3.9'

    // Easy file management
    compile 'commons-io:commons-io:2.5'

    // Config management
    compile 'org.yaml:snakeyaml:1.23'

    // JSON handling
    compile 'com.google.code.gson:gson:2.8.5'

    // Process execution
    compile 'org.zeroturnaround:zt-exec:1.10'

    // HTTP server
    compile 'io.undertow:undertow-core:2.0.16.Final'

    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes(
                'Implementation-Version': appVersion()
        )
    }
}

task dockerBuild(type: Exec, dependsOn: shadowJar) {
    commandLine 'docker', 'build', '-t', dockerImage, project.rootDir

    doLast {
        exec {
            commandLine 'docker', 'tag', dockerImage, "${dockerImageName}:latest-dev"
        }
    }
}

task dockerPush(type: Exec) {
    commandLine 'docker', 'push', dockerImage

    doLast {
        exec {
            commandLine 'docker', 'push', "${dockerImageName}:latest-dev"
        }
    }
}
